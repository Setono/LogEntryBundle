name: CI
on: [push, pull_request]
jobs:
    checks:
        name: 'PHP ${{ matrix.php-versions }} on ${{ matrix.operating-system }} with composer args: ${{ matrix.composer-args }}'
        runs-on: ${{ matrix.operating-system }}
        strategy:
            fail-fast: false
            max-parallel: 3
            matrix:
                operating-system: [ubuntu-latest]
                php-versions: ['7.2', '7.3']
                composer-args: ['--prefer-lowest --prefer-stable', '']
        steps:
            -   name: Checkout
                uses: actions/checkout@v1
            -   name: Setup PHP, with composer and extensions
                uses: shivammathur/setup-php@master
                with:
                    php-version: ${{ matrix.php-versions }}
                    extension-csv: intl
            -   name: Install Composer dependencies
                run: composer update --no-progress --no-suggest --prefer-dist --no-interaction ${{ matrix.composer-args }}
            -   name: Validate composer
                run: composer validate --strict
            -   name: Check composer normalized
                run: composer normalize --dry-run
            -   name: Check style
                run: composer check-style
            -   name: Static analysis
                run: composer analyse
            -   name: Run phpspec
                run: composer phpspec
            -   name: Run phpunit
                run: composer phpunit
            -   name: Setup database, assets and cache
                run: |
                    (cd tests/Application && bin/console doctrine:database:create -vvv)
                    (cd tests/Application && bin/console doctrine:schema:create -vvv)
                    (cd tests/Application && bin/console assets:install public -vvv)
                    (cd tests/Application && bin/console cache:warmup -vvv)
                env:
                    APP_ENV: test
                    DATABASE_URL: mysql://root:root@127.0.0.1/setono_sylius_log_entry?serverVersion=5.7
            #-   name: Run behat
            #    run: vendor/bin/behat --strict -vvv --no-interaction || vendor/bin/behat --strict -vvv --no-interaction --rerun
